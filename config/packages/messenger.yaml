framework:
    messenger:
        buses:
            messenger.bus.default:
                middleware:
                    - App\Infrastructure\Symfony\Messenger\Middleware\OutputWorkerMemoryUsageMiddleware
        # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
        # failure_transport: failed

        transports:
            # https://symfony.com/doc/current/messenger.html#transport-configuration
            service: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=service'
            async_critical: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=async_critical'
            async_high: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=async_high'
            async: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=async'
            cache: '%env(MESSENGER_TRANSPORT_DSN)%?queue_name=cache'
            failed: 'doctrine://default?queue_name=failed'
            sync: 'sync://'
            cron:
                dsn: 'cron://'
                retry_strategy:
                    max_retries: 0 # do not retry

        routing:
            # service
            App\Service\Infrastructure\Job\CheckMessengerMessages\CheckMessengerMessages: service
            App\Service\Infrastructure\Job\GenerateSupervisorConfigs\GenerateSupervisorConfigs: service

            # account
            App\Application\Messenger\Account\ApiKey\CheckApiKeyDeadlineDay: service

            # market
            App\Application\Messenger\Market\TransferFundingFees: async_high

            # orders
            App\Bot\Application\Command\Exchange\TryReleaseActiveOrders: async_high
            App\Bot\Application\Messenger\Job\Utils\FixupOrdersDoubling: async
            App\Bot\Application\Messenger\Job\Utils\MoveStops: async

            # position
            # App\Application\Messenger\Position\CheckPositionIsUnderLiquidation\CheckPositionIsUnderLiquidation: async_critical # for now handled synchronously
            App\Application\Messenger\Position\SyncPositions\CheckOpenedPositionsSymbolsMessage: async
            App\Application\Messenger\Position\CheckMainPositionIsInLoss\CheckPositionIsInLoss: async_high
            App\Application\Messenger\Position\CheckPositionIsInProfit\CheckPositionIsInProfit: async_high

            # trading
            App\Application\Messenger\Trading\CoverLossesAfterCloseByMarket\CoverLossesAfterCloseByMarketConsumerDto: async

            # alarm
            App\Alarm\Application\Messenger\Job\CheckAlarm: async_high

            # connection
            App\Connection\Application\Messenger\Job\CheckConnection: async

            # orders
            App\Bot\Application\Messenger\Job\BuyOrder\CheckOrdersNowIsActive: async_high

            # stale
            # App\Bot\Application\Command\Exchange\IncreaseHedgeSupportPositionByGetProfitFromMain: async

when@test:
    framework:
        messenger:
            transports:
                # replace with your transport name here (e.g., my_transport: 'in-memory://')
                # For more Messenger testing tools, see https://github.com/zenstruck/messenger-test
                # async: 'in-memory://'
                test: 'in-memory://'
