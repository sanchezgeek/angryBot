diff --git a/src/Domain/Price/Price.php b/src/Domain/Price/Price.php
index 6e06b67..13d6971 100644
--- a/src/Domain/Price/Price.php
+++ b/src/Domain/Price/Price.php
@@ -122,4 +122,15 @@ readonly final class Price
 
         return abs($this->value - $price);
     }
+
+//    public function getTargetPriceByPnlPercent(Side $positionSide, float $pnlPercent): Price
+//    {
+//        $sign = $positionSide->isShort() ? -1 : +1;
+//
+//        $value = $this->value / 100;
+//
+//        return Price::float(
+//            $this->value + ($sign * ($pnlPercent / 100) * $value)
+//        );
+//    }
 }
diff --git a/tests/Unit/Domain/Price/PriceTest.php b/tests/Unit/Domain/Price/PriceTest.php
index 318973e..eef35d1 100644
--- a/tests/Unit/Domain/Price/PriceTest.php
+++ b/tests/Unit/Domain/Price/PriceTest.php
@@ -294,4 +294,25 @@ final class PriceTest extends TestCase
             [200501, PriceRange::create(100500, 200500), false],
         ];
     }
+
+//    /**
+//     * @dataProvider isPriceInRangeTestCases
+//     */
+//    public function testGetTargetPriceByPnlPercent(Side $positionSide, float $price, float $pnlPercent, float $expectedResult): void
+//    {
+//        $result = Price::float($price)->getTargetPriceByPnlPercent($positionSide, $pnlPercent);
+//
+//        self::assertEquals($expectedResult, $result);
+//    }
+//
+//    public function getTargetPriceByPnlPercentTestCases(): array
+//    {
+//        return [
+//            [Side::Sell, 71000, 100, 70290],
+//            [200000, PriceRange::create(100500, 200500), true],
+//            [200500, PriceRange::create(100500, 200500), true],
+//            [100499, PriceRange::create(100500, 200500), false],
+//            [200501, PriceRange::create(100500, 200500), false],
+//        ];
+    }
 }
